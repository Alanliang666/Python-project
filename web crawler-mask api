import requests
import json

from sqlalchemy import true

# 收集
url = "https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json"

req = requests.get(url)
data = req.text


# 整理

data = json.loads(data)


# 儲存
with open("mask.json", "w") as f:
 f.write(json.dumps(data))
 
 
from collections import defaultdict
med_count = defaultdict(int)


for row in data ["features"]:
    #把縣市沒有登記到的醫院自動使用住址登記上
    if row['properties']['county'] == "":
        county = each["address"][0:3]
    else:
        conunty = row['properties']['county']
    med_count[conunty] += 1

print(med_count)

# Method 1：透過 dictionary 存放數量
from collections import defaultdict

# 宣告 dictionary 用來存放資料
child_count = defaultdict(int)
adult_count = defaultdict(int)
 
# 將資料迭代印出做計算
for row in data['features']:
 a = row['properties']
 if a["county"] == " ":
 county = a["address"][:3]
 conunty = row['properties']['county']
 mask_child = row['properties']['mask_adult']
 mask_adult = row['properties']['mask_child']
 child_count[conunty] += mask_child
 adult_count[conunty] += mask_adult

# 排序
print(sorted(adult_count.items(), key=lambda kv: kv[1], reverse=True))
print(sorted(child_count.items(), key=lambda kv: kv[1], reverse=True))

# Method 2：透過 Pandas 套件計算
import pandas as pd
properties = []

for info in data['features']:
 properties += [info['properties']]



for a in properties:
 if a["county"] == "":
 a["county"] = a["address"][0:3]

properties = pd.DataFrame(properties)


total = properties[["county","mask_adult","mask_child"]]

total_sum = (total.groupby(by=["county"]).sum()).sort_values(by=['mask_adult','mask_child'],ascending=False)

print(total_sum)
